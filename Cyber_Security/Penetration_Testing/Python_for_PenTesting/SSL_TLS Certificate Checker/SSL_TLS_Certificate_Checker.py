import ssl
import socket
from datetime import datetime

def check_ssl_cert(hostname, port=443):
    try:
        context = ssl.create_default_context()
        with socket.create_connection((hostname, port)) as sock:
            with context.wrap_socket(sock, server_hostname=hostname) as ssock:
                cert = ssock.getpeercert()
                issuer = dict(x[0] for x in cert['issuer'])
                valid_from = datetime.strptime(cert['notBefore'], '%b %d %H:%M:%S %Y %Z')
                valid_to = datetime.strptime(cert['notAfter'], '%b %d %H:%M:%S %Y %Z')
                
                print(f"\n[+] SSL Certificate Info for {hostname}:\n")
                print(f"Issuer: {issuer.get('organizationName', 'N/A')}")
                print(f"Valid From: {valid_from}")
                print(f"Valid To:   {valid_to}")
                
                if valid_to < datetime.utcnow():
                    print("⚠️ Certificate is EXPIRED!")
                else:
                    print("✅ Certificate is VALID")
    except Exception as e:
        print(f"[-] Could not retrieve certificate: {e}")

if __name__ == "__main__":
    target = input("Enter target domain (without https://): ")
    check_ssl_cert(target)
